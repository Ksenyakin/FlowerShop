services:
  db:
    image: postgres:latest
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 12345678
      POSTGRES_DB: FlowersShopBD
    ports:
      - "5432:5432"
    volumes:
      - ./db_data:/var/lib/postgresql/data
      - ./db-init:/docker-entrypoint-initdb.d
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      DB_HOST: db
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: 12345678
      DB_NAME: FlowersShopBD
      AWS_ACCESS_KEY_ID: YIBDV9U1GSYFR44OU0ME
      AWS_SECRET_ACCESS_KEY: N0kL1V9urlhk0ZdLRAscaZOAV80iVBk79BLCQ5SL
      AWS_REGION: ru-1
      AWS_ENDPOINT: https://s3.timeweb.cloud
      AWS_BUCKET_NAME: 84163e07-decor-fleurs-s3

    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - backend
    networks:
      - app-network
    volumes:
      - ./certs:/etc/letsencrypt

networks:
  app-network:
    driver: bridge
