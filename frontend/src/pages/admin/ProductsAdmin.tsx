import React, { useEffect, useState } from "react";
import { useNavigate } from "react-router-dom";
import AdminHeader from "./AdminHeader"; // ‚úÖ –î–æ–±–∞–≤–ª—è–µ–º –∏–º–ø–æ—Ä—Ç
import "./ProductsAdmin.css";

interface Product {
    id: number;
    name: string;
    description: string;
    price: number;
    stock: number;
    image_url: string;
}

const ProductsAdmin: React.FC = () => {
    const [products, setProducts] = useState<Product[]>([]);
    const [loading, setLoading] = useState(true);
    const [selectedImage, setSelectedImage] = useState<string | null>(null);
    const navigate = useNavigate();

    useEffect(() => {
        fetch("/api/products")
            .then((res) => res.json())
            .then((data) => {
                console.log("üì¶ –ó–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã:", data);
                setProducts(Array.isArray(data) ? data : []);
                setLoading(false);
            })
            .catch((err) => {
                console.error("‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ç–æ–≤–∞—Ä–æ–≤:", err);
                setLoading(false);
            });
    }, []);

    const handleDelete = async (id: number) => {
        if (!window.confirm("–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —Ç–æ–≤–∞—Ä?")) return;

        try {
            const response = await fetch(`/api/products/${id}`, {
                method: "DELETE",
                headers: { Authorization: `Bearer ${localStorage.getItem("token")}` },
            });

            if (!response.ok) throw new Error("–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞");

            setProducts(products.filter((product) => product.id !== id));
        } catch (error) {
            console.error("–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞:", error);
        }
    };

    if (loading) return <h1>–ó–∞–≥—Ä—É–∑–∫–∞...</h1>;

    return (
        <>
            <AdminHeader title="–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞–º–∏" />
            <div className="admin-page-content">
                <button onClick={() => navigate("/admin/products/new")} className="add-btn">‚ûï –î–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä</button>

                {products.length === 0 ? <p>–ù–µ—Ç —Ç–æ–≤–∞—Ä–æ–≤</p> : (
                    <table className="products-table">
                        <thead>
                        <tr>
                            <th>–§–æ—Ç–æ</th>
                            <th>–ù–∞–∑–≤–∞–Ω–∏–µ</th>
                            <th>–û–ø–∏—Å–∞–Ω–∏–µ</th>
                            <th>–¶–µ–Ω–∞</th>
                            <th>–û—Å—Ç–∞—Ç–æ–∫</th>
                            <th>–î–µ–π—Å—Ç–≤–∏—è</th>
                        </tr>
                        </thead>
                        <tbody>
                        {products.map((product) => (
                            <tr key={product.id}>
                                <td>
                                    <img
                                        src={product.image_url}
                                        alt={product.name}
                                        className="product-image"
                                        onClick={() => setSelectedImage(product.image_url)}
                                    />
                                </td>
                                <td>{product.name}</td>
                                <td>{product.description}</td>
                                <td>{product.price} ‚ÇΩ</td>
                                <td>{product.stock}</td>
                                <td>
                                    <button onClick={() => navigate(`/admin/products/edit/${product.id}`)}>‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å</button>
                                    <button onClick={() => handleDelete(product.id)}>üóë –£–¥–∞–ª–∏—Ç—å</button>
                                </td>
                            </tr>
                        ))}
                        </tbody>
                    </table>
                )}

                {/* –û–≤–µ—Ä–ª–µ–π –¥–ª—è —É–≤–µ–ª–∏—á–µ–Ω–Ω–æ–≥–æ —Ñ–æ—Ç–æ */}
                {selectedImage && (
                    <div className="image-overlay" onClick={() => setSelectedImage(null)}>
                        <div className="image-container">
                            <img src={selectedImage} alt="–¢–æ–≤–∞—Ä" />
                        </div>
                    </div>
                )}
            </div>
        </>
    );
};

export default ProductsAdmin;
